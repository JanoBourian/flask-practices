openapi: 3.0.0
info:
  version: "1.0.0"
  title: "OpenAPI Course"
  # summary: A pet store manager.
  description: Specifications for OpenAPI Course
  termsOfService: https://example.com/terms
  contact: 
    name: \@janobourian
    url: https://janobourian.com/
    email: contacto@mail.com
  license: 
    name: Apache 2.0
    # identifier: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: 
  - url: https://stores-rest-api.herokuapp.com/
    description: Server to Stores
  - url: https://dev.example.com
    description: Development server
    # variables: ""
  - url: https://dev.example.com
    description: QA server
    # variables: ""
  - url: https://prod.example.com
    description: Production server
    # variables: ""
paths: 
  /v1/customers:
    get: 
      responses:
        "200":
          description: list of Customers
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 100
                description: List of customers
                items:
                  type: object
                  description: Customer object
                  minLength: 2
                  maxLength: 100
                  properties:
                    id:
                      type: string
                      format: uuid
                    firstName: 
                      type: string
                      minLength: 5
                      maxLength: 10
                      example: John
                    secondName:
                      type: string
                      minLength: 5
                      maxLength: 10
                      example: Martin
                    lastName: 
                      type: string
                      minLength: 5
                      maxLength: 10
                      example: Thompson
                    address:
                      $ref: "#/components/schemas/Adress2"
  /v1/beers:
    get:
      responses:
        "200":
          description: list of Beers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"                 
        "404":
          description: list of Descriptions
  /stores:
    get:
      responses: 
        "200":
          description: List of Stores
  /v1/fake:
    get:
      responses:
        "200":
          description: list of Beers
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 100
                description: List of customers
                items:
                  type: string
                  description: product name
                  minLength: 3
                  maxLength: 100 
        "404":
          description: list of Descriptions
# webhooks: ""
components: 
  schemas:
    Address:
      type: object
      minItems: 1
      maxItems: 100
      description: List of Beers object
      items:
        type: object
        description: List of beers
        minLength: 1
        maxLength: 100
        properties: 
          name:
            type: string
          style:
            type: string
            minLength: 3
            maxLength: 8
            description: Styles
            enum:
              - ALE
              - PALE_ALE
              - IPA
              - WHEAT
              - LAGER
          upc: 
            type: string
          price:
            type: number
          quantity:
            type: integer
    Adress2:
      type: object
      properties:
        line1:
          type: string
          example: 123 main
        city: 
          type: string
          example: St Pete
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 2 Letter State Code
          # enum: [AL, AK, AZ, AR, CA]
          enum: 
            - AL
            - AK
            - AZ
            - AR
            - CA
        zipCode:
          type: string
          example: 15989
# security: ""
# tags: ""
# externalDocs: ""
# jsonSchemaDialect: ""